version: '3.8'

services:
  # NEXO API Backend (choose one)
  api-edge:
    build:
      context: ..
      dockerfile: docker/Dockerfile.edge
    container_name: nexo-edge
    ports:
      - "8000:8000"
    volumes:
      - ../server/_data:/app/server/_data
      - ../server/_secrets:/app/server/_secrets
    environment:
      - NODE_ENV=production
      - PORT=8000
      - CORS_ORIGINS=http://localhost:3000,https://*.nexo.chat
      - RATE_LIMIT_RPS=10
      - MAX_WS_PAYLOAD_BYTES=131072
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:8000/health').then(r=>r.ok?process.exit(0):process.exit(1)).catch(()=>process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    profiles:
      - edge

  api-rust:
    build:
      context: ..
      dockerfile: docker/Dockerfile.rust
    container_name: nexo-rust
    ports:
      - "8000:8000"  
    volumes:
      - ../server/_data:/app/server/_data
      - ../server/_secrets:/app/server/_secrets
    environment:
      - RUST_LOG=info
      - PORT=8000
      - CORS_ORIGINS=http://localhost:3000,https://*.nexo.chat
      - RATE_LIMIT_RPS=10
      - MAX_WS_PAYLOAD_BYTES=131072
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    profiles:
      - rust

  # Optional: Reverse proxy for production
  nginx:
    image: nginx:1.25-alpine
    container_name: nexo-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api-edge
    restart: unless-stopped
    profiles:
      - proxy

volumes:
  nexo-data:
    driver: local
  nexo-secrets:
    driver: local

networks:
  default:
    name: nexo-network
